{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/hung.ngo/2B-PROJECT/test-aws/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import styled from'styled-components';import Header from'./Header';import InfoLine from'./InfoLine';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InfoBox=function InfoBox(_ref){var props=_ref.props;var name=props.name,icon=props.icon,data=props.data;return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Header,{name:name,icon:icon}),data.map(function(lineData,index){return/*#__PURE__*/_jsx(InfoLine,{name:lineData.name,icon:lineData.icon},index);})]});};var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding: 10px 0px\\n\"])));export default InfoBox;","map":{"version":3,"sources":["/home/hung.ngo/2B-PROJECT/test-aws/client/src/components/InfoBox.jsx"],"names":["styled","Header","InfoLine","InfoBox","props","name","icon","data","map","lineData","index","Wrapper","div"],"mappings":"oMAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAC3B,GAAQC,CAAAA,IAAR,CAA6BD,KAA7B,CAAQC,IAAR,CAAcC,IAAd,CAA6BF,KAA7B,CAAcE,IAAd,CAAoBC,IAApB,CAA6BH,KAA7B,CAAoBG,IAApB,CACA,mBAAO,MAAC,OAAD,yBACH,KAAC,MAAD,EAAQ,IAAI,CAAEF,IAAd,CAAoB,IAAI,CAAEC,IAA1B,EADG,CAGCC,IAAI,CAACC,GAAL,CAAS,SAACC,QAAD,CAAWC,KAAX,CAAqB,CAC1B,mBAAO,KAAC,QAAD,EAAsB,IAAI,CAAED,QAAQ,CAACJ,IAArC,CAA2C,IAAI,CAAEI,QAAQ,CAACH,IAA1D,EAAeI,KAAf,CAAP,CACH,CAFD,CAHD,GAAP,CAQH,CAVD,CAYA,GAAMC,CAAAA,OAAO,CAAGX,MAAM,CAACY,GAAV,0FAAb,CAIA,cAAeT,CAAAA,OAAf","sourcesContent":["import styled from 'styled-components'\nimport Header from './Header'\nimport InfoLine from './InfoLine'\n\nconst InfoBox = ({ props }) => {\n    const { name, icon, data } = props\n    return <Wrapper>\n        <Header name={name} icon={icon} />\n        {\n            data.map((lineData, index) => {\n                return <InfoLine key={index} name={lineData.name} icon={lineData.icon} />\n            })\n        }\n    </Wrapper>\n}\n\nconst Wrapper = styled.div`\n    padding: 10px 0px\n`\n\nexport default InfoBox"]},"metadata":{},"sourceType":"module"}